.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VERILATOR_GANTT 1"
.TH VERILATOR_GANTT 1 "2023-01-23" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
verilator_gantt \- Create Gantt chart of multi\-threaded execution
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Creates a visual representation to help analyze Verilator multithreaded
simulation performance, by showing when each macro-task starts and ends,
and showing when each thread is busy or idle.
.PP
The generated Gantt chart has time on the X\-axis. Times shown are to the
scale printed, i.e. a certain about of time for each character width.  The
Y\-axis shows threads, each thread's execution is shown on one line.  That
line shows \*(L"[\*(R" at the position in time when it executes.
.PP
Following the \*(L"[\*(R" is the cpu number the task executed on, followed by zero
or more \*(L"\-\*(R" to make the width of the characters match the scaled execution
time, followed by a \*(L"]\*(R".  If the scale is too small, the cpu number and
mtask number will not be printed.  If the scale is very small, a \*(L"&\*(R"
indicates multiple mtasks started at that time position.
.PP
Also creates a value change dump (\s-1VCD\s0) format dump file which may be viewed
in a waveform viewer (e.g. \f(CW\*(C`GTKWave\*(C'\fR).  See below.
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\&  Build with \-\-prof\-threads.
\&
\&  Run a sim with +verilator+prof+threads+window 2.
\&
\&  This will create profile_threads.dat.
\&
\&  Then run:
\&
\&  verilator_gantt profile_threads.dat
\&
\&  The report will be printed on standard output, this also generates
\&  profile_threads.vcd
\&
\&  View profile_threads.vcd in a waveform viewer.
.Ve
.SH "VCD SIGNALS"
.IX Header "VCD SIGNALS"
In waveforms there are the following signals. Most signals the \*(L"decimal\*(R"
format will remove the leading zeros and make the traces easier to read.
.PP
parallelism: The number of mtasks active at this time, for best performance
this will match the thread count. You may want to use an \*(L"analog step\*(R"
format to view this signal.
.PP
cpu#_thread: For the given \s-1CPU\s0 number, the thread number executing.
.PP
mtask#_cpu; For the given mtask id, the \s-1CPU\s0 it is executing on.
.PP
thread#_mtask: For the given thread number, the mtask id executing.
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.IP "\fIfilename\fR" 4
.IX Item "filename"
The filename to read data from, defaults to \*(L"profile_threads.dat\*(R".
.IP "\-\-help" 4
.IX Item "--help"
Displays this message and program version and exits.
.IP "\-\-scale \fIn\fR" 4
.IX Item "--scale n"
On the X\-axis of the generated Gantt chart, each character represents this
many time units. (On x86, time units are rdtsc ticks.)  Defaults to 0,
which will automatically compute a reasonable scale where no two mtasks
need to fit into same character width's worth of scaled time.
.IP "\-\-no\-vcd" 4
.IX Item "--no-vcd"
.PD 0
.IP "\-\-vcd \fIfilename\fR" 4
.IX Item "--vcd filename"
.PD
Set output filename for vcd dump, or disable. Default is
verilator_gantt.vcd.
.SH "DISTRIBUTION"
.IX Header "DISTRIBUTION"
The latest version is available from <https://verilator.org>.
.PP
Copyright 2018\-2020 by Wilson Snyder. This program is free software; you
can redistribute it and/or modify it under the terms of either the \s-1GNU\s0
Lesser General Public License Version 3 or the Perl Artistic License
Version 2.0.
.PP
SPDX-License-Identifier: \s-1LGPL\-3\s0.0\-only \s-1OR\s0 Artistic\-2.0
.SH "AUTHORS"
.IX Header "AUTHORS"
Wilson Snyder <wsnyder@wsnyder.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CW\*(C`verilator\*(C'\fR
